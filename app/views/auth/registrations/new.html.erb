<h2>Sign up</h2>

<%= form_for(resource, as: resource_name, url: registration_path(resource_name), data: { turbo: false }) do |f| %>
  <%= render "devise/shared/error_messages", resource: resource %>

  <div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email, autofocus: true, autocomplete: "email" %>
  </div>

  <div class="field">
    <%= f.label :password %>
    <% if @minimum_password_length %>
    <em>(<%= @minimum_password_length %> characters minimum)</em>
    <% end %><br />
    <%= f.password_field :password, autocomplete: "new-password" %>
  </div>

  <div class="field">
    <%= f.label :password_confirmation %><br />
    <%= f.password_field :password_confirmation, autocomplete: "new-password" %>
  </div>

  <div class="field radio-field">
    <%# write two radio buttons one that selects "applicant" and the other that selects "employer" %>
    <%= f.radio_button :role_id, 1, class: 'radio-applicant' %> Applicant
    <%= f.radio_button :role_id, 2, class: 'radio-employer' %> Employer
  </div>

   <%# field that only displays if role_id is set to 2 %>
   <div class="field company-field">
    <%# this field has nothing by default, JavaScript handles from here. %>
   </div>

  <div class="actions">
    <%= f.submit "Sign up" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>

<script>
  const radioButtons = document.querySelector('.radio-field')
  const role = document.querySelector('.radio-employer')
  const companyField = document.querySelector('.company-field')
  let companies = []

  async function getCompanies() {
    response = await fetch('http://127.0.0.1:3000/companies.json')
    companies = await response.json()
    return companies
  }

  async function addCompanyField() {
      const label = document.createElement('label')
      label.setAttribute('for', 'user_company_id')
      label.innerText = 'Company'

      const select = document.createElement('select')
      select.setAttribute('name', 'user[company_id]')
      select.setAttribute('id', 'user_company_id')

      // append the companies to the select field
      companies.forEach((company) => {
        const option = document.createElement('option')
        option.setAttribute('value', company.id)
        option.innerText = company.name
        select.appendChild(option)
      })

      companyField.appendChild(label)
      companyField.appendChild(select)
  }

  radioButtons.addEventListener('click', async (event) => {
    if (event.target.className === 'radio-employer') {
      // get companies from the server and add them to the select field
      if (companies.length === 0) companies = await getCompanies();
      addCompanyField()
    } else if (event.target.className === 'radio-applicant') {
      // remove the select field
      companyField.innerHTML = ''
    }
  })
</script>
